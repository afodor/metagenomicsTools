
rm(list=ls())

setwd("C:\\farnaz_Feb_2018")
library("Kendall")

filepath =paste("pcoa__withMetadata",".txt",sep="")

myT <- read.table(filepath, sep="\t", header=TRUE)

humanDonorIDs <- myT$Donor[myT$Species=="Human"]

makePretty <- function(s)
{
	val <- strsplit(s, ".",fixed=TRUE)
	
	index <- 1
	returnVal <- ""
	aLength = length(val[[1]] )
	
	while( index <= aLength ) 
	{
		returnVal <- paste(returnVal, val[[1]][index])
		
		if( index %% 2 == 0 & (index+1) < aLength) 
			returnVal <- paste(returnVal, "\n")
		
		index <- index + 1
	}
	
	return (returnVal)
}


pdf("donorHuman.pdf")
par(mfrow=c(2,2))
bugNames <- vector()
pValuesKendall <- vector()
pValuesLinearModelHuman <- vector()
pValuesLinearModelTimepoint <- vector()
pValuesInteraction <- vector()
indexVals <- vector()
corCoefs <- vector()
outerIndex <- 1

# first 10 MDS axes
for ( i in 36:514)
{
	bug <- myT[,i]
	
	if(  sum(bug!=0) > nrow(myT)/10) 
	{
		
	index <- 1
	humanVals <- vector()
	mouseVals <- vector()
	timepointColors<- vector()
	mouseIDs <- vector()
	
	for( h in humanDonorIDs)
	{
		hBug <- bug[myT$Donor==h & myT$Species=="Human"]
		
		if( length(hBug) != 1)
			stop("No")
			
		mouseBugs <- bug[myT$Donor==h & myT$Species=="Mouse" & ( myT$Timepoint_code==2 | myT$Timepoint_code==3) ]
		timepoints <- myT$Timepoint_code[myT$Donor==h & myT$Species=="Mouse" & ( myT$Timepoint_code==2 | myT$Timepoint_code==3) ]
		mIDS <- myT$Mouse_human_ID[myT$Donor==h & myT$Species=="Mouse" & ( myT$Timepoint_code==2 | myT$Timepoint_code==3) ]
		
		if( length(timepoints) != length(mouseBugs)) 
			stop("Logic error")
		
		if( length( mouseBugs) > 0)
		{
			for( j in 1:(length(mouseBugs)) ) 
			{
				humanVals[index] = hBug;
				mouseVals[index] = mouseBugs[j]
				timepointColors[index] = ifelse( timepoints[j] == 2, "black" , "red" )
				
				mouseIDs[index] = mIDS[j]
				
				if( timepoints[j] != 2 & timepoints[j] != 3)
					stop("Logic error 2")
				
				index = index + 1	
			}
		}
		else
		{
			print( paste("No mouse for ",h) )
		} 
	}
	
	bugNames[outerIndex] = names(myT)[i];
	pValuesKendall[outerIndex]=1
	pValuesLinearModelHuman[outerIndex] = 1
	pValuesLinearModelTimepoint[outerIndex]=1
	indexVals[outerIndex] = outerIndex
	corCoefs[outerIndex] = cor(mouseVals ,humanVals, method="kendall")
	
	try(pValuesKendall[outerIndex] <- Kendall(mouseVals ,humanVals)$sl[1])
	try(pValuesLinearModelHuman[outerIndex] <- unclass(summary(lm( mouseVals ~ humanVals * timepointColors)))$coefficients[2,4])
	try(pValuesLinearModelTimepoint[outerIndex] <- unclass(summary(lm( mouseVals ~ humanVals * timepointColors)))$coefficients[3,4])
	try(pValuesInteraction[outerIndex] <- unclass(summary(lm( mouseVals ~ humanVals * timepointColors)))$coefficients[4,4])
	
	namesWithBreaks = makePretty( names(myT)[i])
	aText <- paste0(namesWithBreaks, "\npKendall= ", format(pValuesKendall[outerIndex],digits=3),
	" human=",format(pValuesLinearModelHuman[outerIndex],digits=3),
	" time=" ,format(pValuesLinearModelTimepoint[outerIndex],digits=3),
	 "\nIndex=",outerIndex)
	
	if(length(mouseVals) != length(timepointColors) ) 
		stop("logic error 3")
	
	plot( jitter(mouseVals), jitter(humanVals), main = aText,cex.main=.75,col=timepointColors)
	#todo: Can we make a different symbol for each mouseID??
	#text(mouseVals,humanVals,mouseIDs)
	outerIndex = outerIndex + 1	
	}
}

aFrame <- data.frame(bugNames,pValuesKendall,indexVals,corCoefs,pValuesLinearModelHuman,pValuesLinearModelTimepoint,pValuesInteraction)
aFrame<- aFrame[order(aFrame$pValuesKendall),]
aFrame$adjustedpValuesKendall<- p.adjust( aFrame$pValuesKendall, method = "BH" )	
aFrame$pValuesLinearModelHumanAdjusted <- p.adjust( aFrame$pValuesLinearModelHuman, method = "BH" )
aFrame$pValuesLinearModelTimepointAdjusted <- p.adjust( aFrame$pValuesLinearModelTimepoint, method = "BH" )
aFrame$pValuesInteractionAdjusted <- p.adjust( aFrame$pValuesInteraction, method = "BH" )
write.table(aFrame, file=paste("humanVsMouse.txt",sep=""), sep="\t",row.names=FALSE)

dev.off()

