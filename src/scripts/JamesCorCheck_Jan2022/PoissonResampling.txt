rm(list=ls())

#setwd("C:\\Users\\afodor\\git\\Ranking_WGS_Classifier\\Normalized_Tables\\China")
#myT <- read.table("Kraken2_China_genus_Normalized.csv", sep=",", header=TRUE)

setwd("C:\\Users\\afodor\\git\\Ranking_WGS_Classifier\\Normalized_Tables\\IBD")
myT <- read.table("Kraken2_IBD_genus_Normalized.csv", sep=",", header=TRUE)

myT <- myT[,4:ncol(myT)]

maxCors <- vector(length=ncol(myT))
averageDepth <- vector(length=ncol(myT))

numCols <- ncol(myT)

for( i in 1:numCols )
{
	maxCors[i] <- -1
}


for( i in 1:(numCols -1))
{
	averageDepth[i] <- mean( myT[,i] )
	
	for( j in (i+1):numCols )
	{
		corVal <- cor( myT[,i], myT[,j],method="spearman" )
		
		if( ! is.na(corVal) )
		{
			maxCors[i] <- max(corVal , maxCors[i] )
			maxCors[j] <- max(  maxCors[j], maxCors[i]  )
		}
		
	}
}


par(mfrow=c(2,1))
plot(averageDepth, maxCors)


meanRanks <- rank(-averageDepth, ties.method="min")
#plot(meanRanks,averageDepth)

a <- 10

sumTop <- 0 

probs <- vector(length=a)

for( i in 1:a) 
{
	index <- which( meanRanks == i ) 
	aSum <- 10 ^ averageDepth[index] -1
	sumTop <- sumTop + aSum
}

for( i in 1:a)
{
	index <- which( meanRanks == i ) 
	aSum <- 10 ^ averageDepth[index] -1
	probs[i] = aSum /sumTop
}

backgroundErrorRateMean <- 0.001
backgroundErrorRateSD  <- 0.01

simMeans <- vector()
simCors <- vector()

for( i in 1:(numCols-a))
{
	backgroundErrorRate = rnorm(1,mean = backgroundErrorRateMean, sd = backgroundErrorRateSD  )
	# choose by relative abundance
	colIndex <- which( meanRanks == sample(1:a,1,prob=probs))
	
	dataSimCol <- vector(length=nrow(myT))
	
	for( j in 1:nrow(myT)) 
	{
		dataSimCol[j] <- rbinom( 1, ceiling( 10 ^ myT[j,colIndex]) -1 , backgroundErrorRate )
	}
	
	simMeans[i] <- log10( mean(dataSimCol) -1 ) 
	simCors[i] <-  cor( dataSimCol, myT[,colIndex],method="spearman" )
}

plot(simMeans, simCors)

