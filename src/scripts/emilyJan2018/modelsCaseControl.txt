rm(list=ls())
library("Kendall")

setwd("C:\\EmilyJan2018\\spreadsheets")

# manually replace "n.a" with NA
filepath <- "pcoa_withMetadatagenusWithNA.txt";

myT <-read.table(filepath,sep="\t",header=TRUE)
numCols <- ncol(myT)

myT <- myT[ myT$readNum == 1, ]

# mouse only
myT <- myT[ !is.na (myT$Mouse.group), ]

myTHuman <-read.table(filepath,sep="\t",header=TRUE)
myTHuman <- myTHuman[ myTHuman$readNum == 1, ]
myTHuman <-myTHuman[  !is.na (myT$Mouse.group), ]

donorString <- vector()
caseControl <- vector()

for( i in 1:nrow(myT))
{
	if( myT$Mouse.group[i] == "T1" || myT$Mouse.group[i] == "T2" ) 
	{
		 donorString[i] = paste0(myT$donorID[i], "_case")
		 caseControl[i] = "case"
	}
	else if(myT$Mouse.group[i] == "HC"  )
	{
		 donorString[i] = paste0(myT$donorID[i], "_control")
		 caseControl[i] = "control"
	}
	else
	{
		stop("no")
	}
}

donorStringHuman <- vector()

for( i in 1:nrow(myTHuman))
{
	twoChars = substr(myTHuman$Slurry.ID[i],1,2)
	if( is.na( twoChars )) 
	{
		donorStringHuman[i] = "NA"
	}
	else if( twoChars == "T1" || twoChars == "T2" ) 
	{
		 donorStringHuman[i] = paste0(myTHuman$donorID[i], "_case")
	}
	else if(twoChars == "HC"  )
	{
		 donorStringHuman[i] = paste0(myTHuman$donorID[i], "_control")
	}
	else
	{
		donorStringHuman[i] = "NA"
	}
}


# any difference between case and control
# model will be bug = week + case/control + donorID
# we'll start by ignoring T1/T2..

pValuesCaseControl <- vector()
pValuesTime <- vector()
names <- vector()
backIndex <- vector()

index <-1

#todo <-c(5,6,10,17,23,24,29:43,49,50,53:502)

# could capture earlier columns if cast to numeric
todo <-c(5:502)
for( i in todo) 
{
	toUse <- !is.na(myT[,i])
	bug <- myT[toUse,i]
	
	if( is.numeric(bug) &  sum( bug != 0) > nrow(	myT) / 10)
	{
		aLm <- lm( bug ~ caseControl[toUse] + as.numeric(myT$Week[toUse]) + donorString[toUse])
		pValuesCaseControl[index] <- unclass(summary(aLm))$coefficients[2,4]
		pValuesTime[index] <- unclass(summary(aLm))$coefficients[3,4]
		names[index] <- names(myT)[i]
		backIndex[index] <- i
		index <- index + 1
	}
}

resultsFrame <- data.frame(names,pValuesTime,pValuesCaseControl, backIndex)

resultsFrame <- resultsFrame [order(resultsFrame$pValuesCaseControl),]
resultsFrame$adjustedpValuesCaseControl<- p.adjust( resultsFrame$pValuesCaseControl, method = "BH" )	
resultsFrame$adjustedPTime<- p.adjust( resultsFrame$pValuesTime, method = "BH" )	

write.table(resultsFrame, file=paste("pValues_caseControl.txt",sep=""), sep="\t",row.names=FALSE)

pdf("caseControl.pdf")
par(mfrow=c(3,2))

donors <- unique(myT$donorID)

for ( i in 1:nrow(resultsFrame))
{
	aTitle <-paste(resultsFrame$names[i], "p case/control=",
		format(resultsFrame$adjustedpValuesCaseControl[i],digits=3) )
	
	toUse <- !is.na(myT[, resultsFrame$backIndex[i]] )
	boxplot( myT[toUse, resultsFrame$backIndex[i]] ~  donorString[toUse],main=aTitle ,las=2)
	
	aMin = min(myT[ toUse, resultsFrame$backIndex[i]])
	aMax = max(myT[ toUse, resultsFrame$backIndex[i]])
	aRange = c(aMin,aMax)
	
	for( d in donors ) 
	{
		plot( 
			as.numeric(myT$Week[ toUse & myT$donorID ==d & caseControl =="case" ])
			, myT[ toUse & myT$donorID == d & caseControl =="case"  , resultsFrame$backIndex[i]], col = "red", main=d ,
			xlab="weeks", ylab=resultsFrame$names[i], ylim=aRange)
			
			
		points( 
			as.numeric(myT$Week[ toUse &  myT$donorID ==d & caseControl =="control" ])
			, myT[ toUse & myT$donorID == d & caseControl =="control"  , resultsFrame$backIndex[i]], col = "black", main=d ,
			xlab="weeks", ylab=resultsFrame$names[i] )
	}
	
	lookup = names(myTHuman)==resultsFrame$names[i]
	
	toUse <- !is.na(myTHuman[,lookup] )
	
	boxplot( myTHuman[toUse,lookup] ~ donorStringHuman[toUse],las=2,main=paste("human",resultsFrame$names[i]),
							ylab = resultsFrame$names[i])
	
	hBug <-  myTHuman[toUse,lookup] 
	donorStringHumanSub <- donorStringHuman[toUse]
	someFrame <- data.frame( hBug, donorStringHumanSub)
	
	stripchart(hBug ~ donorStringHumanSub, 
			data = someFrame,vertical = TRUE, pch = 21, add=TRUE )	
	
	#plot(0,type='n',axes=FALSE,ann=FALSE)		
}


dev.off()

# finally work on correlations of metadata to mousedata for mouse only

metadataColumns <- c(21,22,25:41)
mouseDataColumns <- 51:471
metaName <- vector()
bugName <- vector()
pValues <- vector()
sampleSize <- vector()
metaIndex <- vector()
bugIndex <- vector()
index <- 1;

for( i in metadataColumns )
{
	for( j in mouseDataColumns )
	{
		if( sum( myT[toUse,j] != 0) > nrow(	myT) / 10)
		{
			
			toUse <- !is.na( myT[,i] ) & !is.na( myT[,j])
			
			if( sum(toUse) > 10 ) 
			{
				meta <- myT[toUse,i]
				bug <- myT[toUse,j]
				metaName[index] <- names(myT)[i]
				bugName[index] <- names(myT)[j]
				sampleSize[index] <- sum(toUse)
				pValues[index] <- unclass(Kendall( meta, bug))$sl[1]
				metaIndex[index] <- i
				bugIndex[index] <- j
				index<- index + 1	
			}
					
		}
	}
}

corFrame <- data.frame(metaName,bugName,pValues,sampleSize,metaIndex,bugIndex)
corFrame <- corFrame[order(corFrame$pValues),]
corFrame$adjustedpValues<- p.adjust( corFrame$pValues, method = "BH" )	
write.table(corFrame, file=paste("pValues_correlation.txt",sep=""), sep="\t",row.names=FALSE)

pdf("correlations.pdf")

par(mfrow=c(2,2))

for( x in 1:nrow(corFrame))
{
	i <- corFrame$metaIndex[x]
	j <- corFrame$bugIndex[x]
	
	toUse <- !is.na( myT[,i] ) & !is.na( myT[,j])
	meta <- myT[toUse,i]
	bug <- myT[toUse,j]
		
	aTitle <- paste("q", format(corFrame$adjustedpValues[x],digits=3))
	plot(meta, bug, xlab=corFrame$metaName[x], ylab = corFrame$bugName[x],main=aTitle )
}

dev.off()

