rm(list=ls())

setwd("C:\\JonHansenNewdata\\outputTextFiles")

myT <- read.table("B_caccaeForR.txt",header=TRUE,sep="\t")

index <- 1
pValues <- vector()
alleleNames <- vector()
rowIndex <- vector()

for( i in 1:nrow(myT))
{
	wtData <- as.numeric( myT[ i,startsWith(names(myT), "WT")])
	
	wtData <- wtData[ !is.na(wtData) ]
	
	koData <- as.numeric( myT[i,startsWith(names(myT), "KO")])

	koData <- koData[ !is.na(koData) ]

	pValues[index] <- 1
	rowIndex[index] <- i
	
	if( length(wtData) >3 & length(koData) > 3) 
	{	
		if( sum(wtData) >0 | sum(koData) >0 ) 
		{
			pValues[index] <- wilcox.test(wtData ,koData )$p.value
		}		
	}
		
	index <- index + 1	
}	

Chrom <- myT$Chrom  
Index <- myT$Index 
Ref  <- myT$Ref  
Alt  <-   myT$Alt   
Effect <-myT$Effect   
Gene_ID <- myT$Gene_ID  

dFrame <- data.frame(rowIndex, Chrom ,Index ,Ref  ,Alt  ,Effect ,Gene_ID,pValues )

dFrame <- dFrame [order(dFrame$pValues),]
dFrame$adjustedPValues <- p.adjust( dFrame$pValues, method = "BH" )	
write.table(dFrame, file=paste("pValuesForKOWT.txt",sep=""), sep="\t",row.names=FALSE)

pdf("out.pdf")

par(mfrow=c(2,2))

for( j in 1:nrow(dFrame))
{
	i <- dFrame$rowIndex[j]

	wtData <- as.numeric( myT[ i,startsWith(names(myT), "WT")])
	
	wtData <- wtData[ !is.na(wtData) ]
	
	koData <- as.numeric( myT[i,startsWith(names(myT), "KO")])

	koData <- koData[ !is.na(koData) ]
	
	text <- paste("Index= ", myT$Index[i], " p=", format( dFrame$pValues[j],digits=3),
						" bh_adjP=",format( dFrame$adjustedPValues[j],digits=3) )
	
	if( length(wtData) >3 & length(koData) > 3) 
	{
		koLabel <- paste0( "KO(n=", length(koData),")")
		wtLabel <- paste0( "WT(n=", length(wtData),")")
		boxplot( koData ,wtData,main=text,names=c(koLabel,wtLabel))		
		
		allData <- c(koData,wtData)
		cats <- c( rep("KO",length(koData) ),rep("WT",length(wtData)) )
		myFrame <- data.frame( allData, cats )
			
		stripchart(allData ~ cats, data = myFrame,vertical = TRUE, pch = 21, add=TRUE )	
		
		vals <- myT[i,7:ncol(myT)]
		labelNames<- names(vals)
		newNames <- vector()
		newNames[1] = labelNames[1]
		
		for( k in 2:(length(labelNames))) 
		{
			if( labelNames[k] == "control" ) 
			{
				newNames[k]  = labelNames[k]
			}
			else if(strsplit(labelNames[k], "_")[[1]][3] == strsplit(labelNames[k-1], "_")[[1]][3]) 
			{
				newNames[k] = ""	
			}
			else
			{
				newNames[k]  = labelNames[k]
			}
		}
		
		colors = c(rep("black", length(vals)-1), "red")
		
		boxplot( vals, names = newNames,las=2,
		 main=paste(myT$Chrom[i],"\n", myT$Effect[i]),cex.main=0.8, medcol=colors)
		
		 yMax = max(vals[!is.na(vals)])
		 
		 # strip off the control
		 vals = vals[1:(length(vals)-1)]
		 
		 animalIds <- vector()
		 dates <- vector()
		 
		 for( k in 1:(length(labelNames)-1)) 
		 {
		 	wtKo = strsplit(labelNames[k], "_")[[1]][1]
		 	id = strsplit(labelNames[k], "_")[[1]][2]
		 
		 	animalIds[k] = paste0(wtKo ,"_",id)
		 	dates[k] = strsplit(labelNames[k], "_")[[1]][3]
		 			
		 }
		 
		 uniqueIDs <- unique( animalIds)
		 
		 plot(1, type="n", xlab="", ylab="", xlim=c(as.numeric(min(dates))-10, as.numeric(max(dates))+10), ylim=c(0, yMax))
		 		  
		 plot(1, type="n", xlab="", ylab="", xlim=c(as.numeric(min(dates))-10, as.numeric(max(dates))+10), ylim=c(0, yMax))
		 
		 for( k in 1:(length(uniqueIDs))) 
		 {
		 	if( substr(uniqueIDs[k],1,2) == "WT"  )
		 	{
		 		toGraph = vals[animalIds==uniqueIDs[k]]  
		 		datesToGraph <- dates[animalIds==uniqueIDs[k]]
		 		maxVal = which( toGraph == max(toGraph[!is.na(toGraph)]))[1]
			
		 		points( datesToGraph, toGraph)
		 		lines(datesToGraph, toGraph)
		 		
		 		if( !is.na(maxVal) )
		 		{
			 		textVals <- vector()
			 		
			 		for( m in 1:length(toGraph))
			 		{
			 			if( m == maxVal ) 
			 			{
			 				textVals[m] =  uniqueIDs[k]
			 			}
			 			else
			 			{
			 				textVals[m] =  ""
			 			}
			 		}
			 		
			 		text(dates[animalIds==uniqueIDs[k]],vals[animalIds==uniqueIDs[k]]+ rnorm(1,0,.02), textVals)	
		 		}
		 		
		 	}
		 }
	}
}

dev.off()

